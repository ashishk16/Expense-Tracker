// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header component should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <img
          className="col-1 logo"
          src={Object {}}
        />,
        <Link
          className="col-1"
          replace={false}
          to="/"
        >
           Home
        </Link>,
        <Link
          className="col-1"
          replace={false}
          to="/all"
        >
           New Expense
        </Link>,
        <Link
          className="col-1"
          replace={false}
          to="/all"
        >
           All Expenses
        </Link>,
        <Link
          className="col-1"
          replace={false}
          to="/all"
        >
           About
        </Link>,
      ],
      "className": "header",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "col-1 logo",
          "src": Object {},
        },
        "ref": null,
        "rendered": null,
        "type": "img",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": " Home",
          "className": "col-1",
          "replace": false,
          "to": "/",
        },
        "ref": null,
        "rendered": " Home",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": " New Expense",
          "className": "col-1",
          "replace": false,
          "to": "/all",
        },
        "ref": null,
        "rendered": " New Expense",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": " All Expenses",
          "className": "col-1",
          "replace": false,
          "to": "/all",
        },
        "ref": null,
        "rendered": " All Expenses",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": " About",
          "className": "col-1",
          "replace": false,
          "to": "/all",
        },
        "ref": null,
        "rendered": " About",
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <img
            className="col-1 logo"
            src={Object {}}
          />,
          <Link
            className="col-1"
            replace={false}
            to="/"
          >
             Home
          </Link>,
          <Link
            className="col-1"
            replace={false}
            to="/all"
          >
             New Expense
          </Link>,
          <Link
            className="col-1"
            replace={false}
            to="/all"
          >
             All Expenses
          </Link>,
          <Link
            className="col-1"
            replace={false}
            to="/all"
          >
             About
          </Link>,
        ],
        "className": "header",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "col-1 logo",
            "src": Object {},
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": " Home",
            "className": "col-1",
            "replace": false,
            "to": "/",
          },
          "ref": null,
          "rendered": " Home",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": " New Expense",
            "className": "col-1",
            "replace": false,
            "to": "/all",
          },
          "ref": null,
          "rendered": " New Expense",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": " All Expenses",
            "className": "col-1",
            "replace": false,
            "to": "/all",
          },
          "ref": null,
          "rendered": " All Expenses",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": " About",
            "className": "col-1",
            "replace": false,
            "to": "/all",
          },
          "ref": null,
          "rendered": " About",
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;
